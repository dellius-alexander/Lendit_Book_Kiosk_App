# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time+
name: Testing Project Environment
env:
  MYSQL_DATABASE: 'Lendit_Book_Kiosk'
  MYSQL_USER: 'admin'
  MYSQL_PASSWORD: 'developer'
  MYSQL_ROOT_PASSWORD: 'developer'
  MAVEN_VERSION: '3.8.4'
  MYSQL_HOST: 'mysql-master'
on:
  push:
    branches: 
    - 'main'
    - 'release*'
    - '*'
  pull_request:
    branches: 
    - 'main'
    - 'release*'
    - '*'
jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    container:
      image: ubuntu:latest
    services:
      mysql-master:
        image: mysql:8.0.27
        ports:
          - '8888:3306'
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
          MAVEN_VERSION: ${{ env.MAVEN_VERSION }}
        options: >-
          --name=mysql-master
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3
    steps:
      - name: step 0 - Listing Project Directory Structure
        run: |
          ls -R
      - name: step 1 - Setup Build Environment
        run: |
          apt-get update
          apt-get install -y mysql-client curl 
          curl -fsSLo  /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz  \
          https://dlcdn.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz
          tar xzvf /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz  -C  /opt/
          echo "Maven Version: ${MAVEN_VERSION}"
          export M2_HOME=/opt/apache-maven-${MAVEN_VERSION} 
          export M2=/opt/apache-maven-${MAVEN_VERSION}/bin 
          export PATH=/opt/apache-maven-${MAVEN_VERSION}/bin:$PATH 
          export MAVEN_OPTS='-Xms256m -Xmx512m' 
          ln -sf  "/opt/apache-maven-${MAVEN_VERSION}/bin/mvn" /usr/local/bin
      - name: step 2 - Verify MySQL connection from container
      - uses: actions/checkout@v1
        run: |
          echo "MySQL USER: ${MYSQL_USER}"
          mysql --host mysql-master --port 8888 -u root -p ${MYSQL_ROOT_PASSWORD} -e "SHOW DATABASES;"
          mysql --host mysql-master --port 8888 -u root -p ${MYSQL_ROOT_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS Lendit_Book_Kiosk;"
      - uses: actions/checkout@v2
      - name: step 3 - Set up Java JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: step 3 - Building our Maven Project
        run:  |
          mvn -B package --file pom.xml
          mkdir staging && cp target/*.jar staging
      - name: step 4 - Setup a cache for Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-key: ${{ runner.os }}-m2
      - name: step 5 - Persist workflow data as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: github-actions-artifact
          path: staging
      

