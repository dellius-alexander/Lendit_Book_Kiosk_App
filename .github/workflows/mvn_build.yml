# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time+
name: Testing Project Environment
env:
  MYSQL_DATABASE: Lendit_Book_Kiosk
  MYSQL_USER: admin
  MYSQL_PASSWORD: developer
  MYSQL_ROOT_PASSWORD: developer
on:
  push:
    branches: 
    - 'main'
    - 'release*'
    - '*'
  pull_request:
    branches: 
    - 'main'
    - 'release*'
    - '*'
jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    container:
      image: ubuntu:18.04
    services:
      mysql-master:
        image: mysql:5.7
        ports:
          - 3306/tcp
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_USER: ${{ env.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ env.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
        options: >-
          --name=mysql-master
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: step 1 - Listing Project Directory Structure
        run: |
          ls -R
      - name: step 2 - Installing Mysql-Client
        run: |
          apt-get update && export DEBIAN_FRONTEND=noninteractive \
          && apt-get -y install --no-install-recommends mysql-client
      - name: step 3 - Building our Maven Project
        run:  |
          mvn -B package --file pom.xml
          mkdir staging && cp target/*.jar staging
      - name: step 4 - Setup a cache for Maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-key: ${{ runner.os }}-m2
      - name: step 5 - Persist workflow data as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: github-actions-artifact
          path: staging
      

