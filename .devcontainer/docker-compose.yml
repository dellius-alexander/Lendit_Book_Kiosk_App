version: '3.8'
services:
  #####################################################################
  db:
    image: mysql:8.0.28
#    build:
#      context: .
#      dockerfile: db.Dockerfile
#      args:
#        MYSQL_SERVER_PACKAGE: "mysql-community-server-minimal-8.0.28"
#        MYSQL_SHELL_PACKAGE: "mysql-shell-8.0.28"
    container_name: Lendit_Book_Kiosk-db
#    shm_size: 4g
    environment:
      # MYSQLD_USER=mysql
      # # Disable User Secret
      # MYSQL_ALLOW_EMPTY_PASSWORD: 0
      # Name of the database
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      # # #### MySQL Host variable:
      # # So you don't have to use root, but you can if
      # # you like
      MYSQL_USER: "${MYSQL_USER}"
      # # You can use whatever password you like
      MYSQL_PASSWORD: "${MYSQL_PASSWD}"
      # Secret for root access
      MYSQL_ROOT_PASSWORD: "${MYSQL_PASSWD}"
    volumes:
      # # mysql logs
      - .logs/mysql_log:/var/log/mysql
      # # mysql data directory
#      - mysql-data:/var/lib/mysql
      # # # mysql config file location
#      - ../SQL/config:/etc/mysql/conf.d
      # # # mysql entrypoint startup script
      - ../SQL/entrypoint:/docker-entrypoint-initdb.d
      # # # map mysql directory to privileged mysql directory
      - ../SQL/mysql_files:/mysql_files
    deploy:
      replicas: 1
#     restart: "no"
#     restart: always
    restart: on-failure
#     restart: unless-stopped
    expose:
      - 3306
      - 33060
      - 33061
    ports:
      - "3306:3306"
      - "33060:33060"
      - "33061:33061"
    networks:
      lbk-network:
      #     ipv4_address: 172.16.238.18    # default gateway  172.16.238.1
      #ipv6_address: 2001:3984:3989::9
#    command: bash -c
#      - "touch /var/log/mysql/general.log /var/log/mysql/slow_query.log"
     # secrets:
      #   - MYSQL_USER
      #   - MYSQL_PASSWD
      # - mysql_secret_key
      # - mysql_secret_pub
  #####################################################################
  #  app:
  #    # image: dalexander2israel/lendit_book_kiosk:base_v1
  #    build:
  #      context: .
  #      dockerfile: app.Dockerfile
  #      args:
  #        UPGRADE_PACKAGES: "true"
  #        JAVA_VERSION: 11
  #        SDKMAN_DIR: "/root/.sdkman/bin/sdkman-init.sh"
  #        # Update the VARIANT arg to pick a Java version: 11, 16
  #        VARIANT: "bionic"
  #        # Options
  #        INSTALL_MAVEN: "false"
  #        INSTALL_GRADLE: "true"
  #        NODE_VERSION: "16"
  #        APP_DIR: "/home/vscode/Lendit_Book_Kiosk_App"
  #        GIT_REPO: "https://github.com/dellius-alexander/Lendit_Book_Kiosk_App.git"
  #        GIT_BRANCH: "main"
  #        MAVEN_VERSION: "3.8.4"
  #        # Add Github USER.NAME
  #        GIT_USER: "${GIT_USER}"
  #        # Add Github USER.EMAIL
  #        GIT_EMAIL: "${GIT_EMAIL}"
  #        INSTALL_ZSH: "true"
  #        USE_MOBY: "true"
  #        # User Info
  #        USERNAME: "vscode"
  #        USERCRED: ""
  #        # Define JAVA_HOME
  #        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
  #        # Add packages whitespaced apart in quotation => "pkg1 pkg2 pkg3"
  #        ADDITIONAL_PACKAGES: ""
  #    container_name: Lendit_Book_Kiosk-app
  #    privileged: true
  #    environment:
  #      - DISPLAY=Lendit_Book_Kiosk_App
  #      - MYSQL_HOST=Lendit_Book_Kiosk-db
  #      - MYSQL_PORT="${MYSQL_PORT}"
  #      - MYSQL_USER="${MYSQL_USER}"
  #      - GIT_USER="${GIT_USER}"
  #      - GIT_EMAIL="${GIT_EMAIL}"
  #      - M2=/opt/apache-maven-3.8.4/bin
  #      - JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
  #      - M2_HOME=/opt/apache-maven-3.8.4
  #      - MAVEN_OPTS='-Xms256m -Xmx512m'
  #      - APP_DIR="/home/vscode/Lendit_Book_Kiosk_App"
  #      - GIT_REPO='https://github.com/dellius-alexander/Lendit_Book_Kiosk_App.git'
  #      # - PATH='/opt/apache-maven-3.8.4/bin:/usr/local/share/nvm/current/bin:/usr/local/sdkman/candidates/java/current/bin:/usr/local/openjdk-11/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/sdkman/candidates/gradle/current/bin'
  #    volumes:
  #      # Forwards the local Docker socket to the container.
  #      # - /var/run/docker.sock:/var/run/docker-host.sock
  #      # Update this to wherever you want VS Code to mount the folder of your project
  #      - ../:/home/vscode/Lendit_Book_Kiosk_App
  #      # Extensions directory
  #      - vscode-std-extensions:/home/vscode/.vscode-server/extensions
  #      # And/or for VS Code Insiders
  #      - vscode-extensions-insiders:/home/vscode/.vscode-server-insiders/extensions
  #      # Maven persisted volume
  #      - maven-m2-repository:/home/vscode/.m2
  #      # Docker-In-Docker
  #      - dind-var-lib-docker:/var/lib/docker
  #
  #    # Overrides default command so things don't shut down after the process ends.
  #    # entrypoint: /usr/local/share/docker-init.sh
  #    # command: sleep infinity
  #    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
  #    # cap_add:
  #    #  - SYS_PTRACE
  #    # security_opt:
  #    #   - seccomp:unconfined
  #    # Setup web app dependencies
  #    depends_on:
  #      - db
  #    # links:
  #    #   - db
  #    # # Uncomment the next line to use a non-root user for all processes.
  #    # user: vscode
  #  #restart: "no"
  #    #restart: always
  #    # restart: on-failure
  #    restart: unless-stopped
  #    expose:
  #      - 8081
  #      - 8082
  #    ports:
  #    - "8081:8081"
  #    - "8082:8082"
  #    # # network_mode: service:db
  #    networks:
  #      lbk-network:
  #    #     ipv4_address: 172.16.238.20     # default gateway  172.16.238.1
  #    #     ipv6_address: 2001:3984:3989::10
  #    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
  #    # (Adding the "ports" property to this file will not forward from a Codespace.)
  #    # secrets:
  #    #   - MYSQL_USER
  #    #   - MYSQL_PASSWD
  #    #   - GIT_USER
  #    #   - GIT_EMAIL
  #    #   - MYSQL_HOST
  #      # - mysql_secret_key
  #      # - mysql_secret_pub
  #####################################################################
  #  adminer:
  #    image: adminer:latest
  #    container_name: Lendit_Book_Kiosk-adminer
  #    restart: unless-stopped
  #    expose:
  #    - 8080
  #    ports:
  #    - "8083:8080"
  #    # entrypoint:
  #    # - "entrypoint.sh"
  #    # - "docker-php-entrypoint"
  #    # depends_on:
  #    # - db
  ######################################################################
  ######################################################################
  # Selenium Grid Load balancer [Optional]:
  # Load balancer configuration file located at:
  # - .devcontainer/nodeDocker/nginx.conf
  ######################################################################
  #  nginx: # LoadBalancer
  #    image: nginx:latest
  #    container_name: load-balancer
  #    volumes:
  #      - ./nodeDocker/nginx.conf:/etc/nginx/nginx.conf:ro
  #      - ./nodeDocker/nginx.conf:/usr/local/etc/nginx/nginx.conf:ro
  #    depends_on:
  #      - selenium-hub
  #    ports:
  #      - "5900:5900"
  #    networks:
  #      lbk-network:
  #        ipv4_address: 172.21.0.10
  ######################################################################
  ######################################################################
  # Hub is the Master that assigns tests to Node-[(edge|firefox|chrome)]
  ######################################################################
#  selenium-hub:
#    image: selenium/hub:4.1.3-20220405
#    container_name: Lendit_Book_Kiosk-selenium-hub
#    environment:
#      - GRID_TIMEOUT=180
#      - GRID_BROWSER_TIMEOUT=180
#    expose:
#      - "4442"
#      - "4443"
#      - "4444"
#    ports:
#      - "4442:4442"
#      - "4443:4443"
#      - "4444:4444"
#    deploy:
#      replicas: 1
#    restart: on-failure
#    entrypoint: bash -c 'SE_OPTS="--host $$HOSTNAME" /opt/bin/entry_point.sh'
#    networks:
#      lbk-network:
#######################################################################
#  # Node-Docker: used to spawn ffmpeg recording and browser (chrome,
#  # edge,firefox) environments for UI Testing
# #####################################################################
#  node-docker:
#    image: selenium/node-docker:4.1.3-20220405
#    shm_size: 2g
#    #    build:
#    #      context: .
#    #      dockerfile: node_docker.Dockerfile
#    container_name: Lendit_Book_Kiosk-node-docker
#    volumes:
#      # To have the assets saved on your host
#      - ./nodeAssets:/opt/selenium/assets
#      # The "dynamic" execution mode needs to be told
#      # what Docker images to use when the containers get
#      # started. Additionally, the Grid needs to know the URI of the Docker daemon.
#      - ./nodeDocker/config.toml:/opt/bin/config.toml
#      - /var/run/docker.sock:/var/run/docker.sock
#    depends_on:
#      - selenium-hub
#    links:
#      - selenium-hub
#    environment:
#      - SE_EVENT_BUS_HOST=selenium-hub
#      - SE_EVENT_BUS_PUBLISH_PORT=4442
#      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
#      - SCREEN_HEIGHT=1080
#      - SCREEN_WIDTH=1920
#      - SCREEN_DPI=166  # 1920 x 1080
#      - SCREEN_DEPTH=24
#    privileged: true
#    deploy:
#      replicas: 1
#    restart: on-failure
#    entrypoint: bash -c 'SE_OPTS="--host $$HOSTNAME" /opt/bin/entry_point.sh'
#    networks:
#      lbk-network:
#####################################################################
######################################################################
# Selenium Collection of Browser Environments
######################################################################
#  chrome:
#    image: selenium/node-chrome:4.1.3-20220405
#    container_name: Lendit_Book_Kiosk-selenium-node-chrome
#    shm_size: 2g
##    volumes:
##      - chrome-dev-shm:/dev/shm
#    depends_on:
#      - selenium-hub
#    links:
#      - selenium-hub
#    environment:
#      - SE_EVENT_BUS_HOST=selenium-hub
#      - SE_EVENT_BUS_PUBLISH_PORT=4442
#      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
#      - SCREEN_HEIGHT=1080
#      - SCREEN_WIDTH=1920
#      - SCREEN_DPI=166  # 1920 x 1080
#      - SCREEN_DEPTH=24
#    deploy:
#      replicas: 1
#    restart: on-failure
#    entrypoint: bash -c 'SE_OPTS="--host $$HOSTNAME" /opt/bin/entry_point.sh'
#    networks:
#      lbk-network:
#
######################################################################
#  firefox:
#    image: selenium/node-firefox:4.1.3-20220405
#    container_name: Lendit_Book_Kiosk-selenium-node-firefox
#    shm_size: 2g
##    volumes:
##      - firefox-dev-shm:/dev/shm
#    depends_on:
#      - selenium-hub
#    links:
#      - selenium-hub
#    environment:
#      - SE_EVENT_BUS_HOST=selenium-hub
#      - SE_EVENT_BUS_PUBLISH_PORT=4442
#      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
#      - SCREEN_HEIGHT=1080
#      - SCREEN_WIDTH=1920
#      - SCREEN_DPI=166  # 1920 x 1080
#      - SCREEN_DEPTH=24
#    deploy:
#      replicas: 1
#    restart: on-failure
#    entrypoint: bash -c 'SE_OPTS="--host $$HOSTNAME" /opt/bin/entry_point.sh'
#    networks:
#      lbk-network:
######################################################################
#  edge:
#    image: selenium/node-edge:4.1.3-20220405
#    container_name: Lendit_Book_Kiosk-selenium-node-edge
#    shm_size: 2g
#    #    volumes:
#    #      - firefox-dev-shm:/dev/shm
#    depends_on:
#      - selenium-hub
#    links:
#      - selenium-hub
#    environment:
#      - SE_EVENT_BUS_HOST=selenium-hub
#      - SE_EVENT_BUS_PUBLISH_PORT=4442
#      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
#      - SCREEN_HEIGHT=1080
#      - SCREEN_WIDTH=1920
#      - SCREEN_DPI=166  # 1920 x 1080
#      - SCREEN_DEPTH=24
#    deploy:
#      replicas: 1
#    restart: on-failure
#    entrypoint: bash -c 'SE_OPTS="--host $$HOSTNAME" /opt/bin/entry_point.sh'
#    networks:
#      lbk-network:
#
######################################################################
#  chrome_video:
#    image: selenium/video:ffmpeg-4.3.1-20220405
#    container_name: chrome_video
#    privileged: true
#    volumes:
#      - ./nodeAssets:/videos
#    depends_on:
#      - chrome
#    environment:
#      - DISPLAY_CONTAINER_NAME=chrome
#      - FILE_NAME=chrome_video.mp4
#      - PROBESIZE=256
#      - probesize=256
#    deploy:
#      replicas: 1
#    restart: on-failure
#    entrypoint: bash -c 'SE_OPTS="--host $$HOSTNAME" /opt/bin/entry_point.sh'
#    networks:
#      lbk-network:
#
######################################################################
#  edge_video:
#    image: selenium/video:ffmpeg-4.3.1-20220405
#    container_name: edge_video
#    privileged: true
#    volumes:
#      - ./nodeAssets:/videos
#    depends_on:
#      - edge
#    environment:
#      - DISPLAY_CONTAINER_NAME=edge
#      - FILE_NAME=edge_video.mp4
#    deploy:
#      replicas: 1
#    restart: on-failure
#    entrypoint: bash -c 'SE_OPTS="--host $$HOSTNAME" /opt/bin/entry_point.sh'
#    networks:
#      lbk-network:
#
######################################################################
#  firefox_video:
#    image: selenium/video:ffmpeg-4.3.1-20220405
#    privileged: true
#    volumes:
#      - ./nodeAssets:/videos
#    depends_on:
#      - firefox
#    environment:
#      - DISPLAY_CONTAINER_NAME=firefox
#      - FILE_NAME=firefox_video.mp4
#    deploy:
#      replicas: 1
#    restart: on-failure
#    entrypoint: bash -c 'SE_OPTS="--host $$HOSTNAME" /opt/bin/entry_point.sh'
#    networks:
#      lbk-network:
######################################################################
######################################################################
# VAULT SECURE PASSWORD KEY STORAGE
######################################################################
#  vault-server:
#    image: vault:latest
#    ports:
#      - "8200:8200"
#    environment:
#      VAULT_ADDR: "http://0.0.0.0:8200"
#      VAULT_DEV_ROOT_TOKEN_ID: "vault-plaintext-root-token"
#    cap_add:
#      - IPC_LOCK
#    networks:
#      lbk-network:
#        ipv4_address: 172.21.0.10
#        aliases:
#          - vault-server
#  vault-client:
#    build: .
#    environment:
#      VAULT_ADDR: "http://vault-server:8200"
#    networks:
#      lbk-network:
#        ipv4_address: 172.21.0.20
#        aliases:
#          - vault-client
################################# volumes ###########################
# since we are using direct access to host directories, we do not need to
# declare any virtual volume mounts
#####################################################################
# NETWORKS
networks:
  lbk-network:
    name: lbk-app-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.1/28
          gateway: 172.21.0.1
#         - subnet: 2001:3984:3989::/64
#           gateway: 2001:3984:3989::1

#####################################################################
# SECRETS can be passed into any container after defined her in secrets definition.
# secrets:
#   GIT_EMAIL:
#     file: ./.secrets/GIT_EMAIL
#   GIT_USER:
#     file: ./.secrets/GIT_USER
#   MYSQL_HOST:
#     file: ./.secrets/MYSQL_HOST
#   MYSQL_USER:
#     file: ./.secrets/MYSQL_USER
#   MYSQL_PASSWD:
#     file: ./.secrets/MYSQL_PASSWD
#####################################################################
volumes:
  mysql-data: null
  vscode-std-extensions: null
  vscode-extensions-insiders: null
  maven-m2-repository: null
  dind-var-lib-docker: null
